name: Docker Build

on:
  push:
    branches: [ master, main, dev ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ master, main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (minimal, standard, full)'
        required: true
        default: 'standard'
        type: choice
        options:
          - minimal
          - standard
          - full

jobs:
  # Job to determine which builds to run based on trigger type
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual triggers, only build the selected type
            echo "matrix={\"include\":[{\"name\":\"${{ github.event.inputs.build_type }}\",\"build_args\":\"${{ github.event.inputs.build_type == 'minimal' && '--minimal' || github.event.inputs.build_type == 'full' && '--full' || '--with-zfs --with-recovery-tools --with-network-tools' }}\"}]}" >> $GITHUB_OUTPUT
          else
            # For automatic triggers, build all types
            echo "matrix={\"include\":[{\"name\":\"minimal\",\"build_args\":\"--minimal\"},{\"name\":\"standard\",\"build_args\":\"--with-zfs --with-recovery-tools --with-network-tools\"},{\"name\":\"full\",\"build_args\":\"--full\"}]}" >> $GITHUB_OUTPUT
          fi

  # Build job using the unified build script
  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
      fail-fast: false
    
    name: Build OneRecovery (${{ matrix.name }})
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc g++ make autoconf automake libtool libelf-dev upx-ucl unzip
      
      - name: Make build scripts executable
        run: |
          chmod +x build/build_helper.sh
          chmod +x build/cross_env_build.sh
      
      - name: Run unified build script
        env:
          GITHUB_ACTIONS: "true"
        run: |
          mkdir -p output
          cd build
          ./cross_env_build.sh ${{ matrix.build_args }}
      
      - name: Check for build artifacts
        id: check_files
        run: |
          if [ -f "./output/OneRecovery.efi" ]; then
            echo "efi_file=true" >> $GITHUB_OUTPUT
            du -h ./output/OneRecovery.efi
          else
            echo "efi_file=false" >> $GITHUB_OUTPUT
            echo "Build failed to produce OneRecovery.efi"
            exit 1
          fi
      
      - name: Upload build artifact
        if: steps.check_files.outputs.efi_file == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: OneRecovery-${{ matrix.name }}
          path: ./output/OneRecovery.efi
          if-no-files-found: error

  # Package all artifacts into a release
  release:
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Create release package
        run: |
          mkdir -p release
          # Only copy files that exist
          if [ -f "./artifacts/OneRecovery-minimal/OneRecovery.efi" ]; then
            cp ./artifacts/OneRecovery-minimal/OneRecovery.efi ./release/OneRecovery-minimal.efi
          fi
          if [ -f "./artifacts/OneRecovery-standard/OneRecovery.efi" ]; then
            cp ./artifacts/OneRecovery-standard/OneRecovery.efi ./release/OneRecovery-standard.efi
          fi
          if [ -f "./artifacts/OneRecovery-full/OneRecovery.efi" ]; then
            cp ./artifacts/OneRecovery-full/OneRecovery.efi ./release/OneRecovery-full.efi
          fi
          cd release
          zip -r OneRecovery-release.zip *.efi
      
      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: OneRecovery-release
          path: ./release/OneRecovery-release.zip